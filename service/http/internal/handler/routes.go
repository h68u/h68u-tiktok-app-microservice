// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	contact "h68u-tiktok-app-microservice/service/http/internal/handler/contact"
	user "h68u-tiktok-app-microservice/service/http/internal/handler/user"
	video "h68u-tiktok-app-microservice/service/http/internal/handler/video"
	"h68u-tiktok-app-microservice/service/http/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/douyin/user/register",
				Handler: user.RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/douyin/user/login",
				Handler: user.LoginHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Auth},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/douyin/user",
					Handler: user.GetUserInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/douyin/relation/action",
					Handler: user.FollowHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/douyin/relation/follow/list",
					Handler: user.FollowListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/douyin/relation/follower/list",
					Handler: user.FansListHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/douyin/feed",
				Handler: video.GetVideoListHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Auth},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/douyin/publish/action",
					Handler: video.PublishVideoHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/douyin/publish/list",
					Handler: video.PublishedListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/douyin/favorite/action",
					Handler: video.FavoriteVideoHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/douyin/favorite/list",
					Handler: video.FavoriteListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/douyin/comment/action",
					Handler: video.CommentVideoHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/douyin/comment/list",
					Handler: video.CommentListHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Auth},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/douyin/relation/friend/list",
					Handler: contact.GetFriendListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/douyin/message/action",
					Handler: contact.SendMessageHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/douyin/message/chat",
					Handler: contact.GetHistoryMessageHandler(serverCtx),
				},
			}...,
		),
	)
}
