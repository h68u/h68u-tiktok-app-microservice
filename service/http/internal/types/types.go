// Code generated by goctl. DO NOT EDIT.
package types

type RegisterRequest struct {
	Username string `form:"username"`
	Password string `form:"password"`
}

type RegisterReply struct {
	Code   int    `json:"status_code"`
	Msg    string `json:"status_msg"`
	UserId int    `json:"user_id"`
	Token  string `json:"token"`
}

type LoginRequest struct {
	Username string `form:"username"`
	Password string `form:"password"`
}

type LoginReply struct {
	Code   int    `json:"status_code"`
	Msg    string `json:"status_msg"`
	UserId int    `json:"user_id"`
	Token  string `json:"token"`
}

type GetUserInfoRequest struct {
	UserId int    `form:"user_id"`
	Token  string `form:"token"`
}

type GetUserInfoReply struct {
	Code int    `json:"status_code"`
	Msg  string `json:"status_msg"`
	User User   `json:"user"`
}

type FollowRequest struct {
	UserId     int    `form:"user_id"`
	Token      string `form:"token"`
	ToUserId   int    `form:"to_user_id"`
	ActionType int    `form:"action_type"`
}

type FollowReply struct {
	Code int    `json:"status_code"`
	Msg  string `json:"status_msg"`
}

type FollowListRequest struct {
	UserId int    `form:"user_id"`
	Token  string `form:"token"`
}

type FollowListReply struct {
	Code  int    `json:"status_code"`
	Msg   string `json:"status_msg"`
	Users []User `json:"user_list"`
}

type FansListRequest struct {
	UserId int    `form:"user_id"`
	Token  string `form:"token"`
}

type FansListReply struct {
	Code  int    `json:"status_code"`
	Msg   string `json:"status_msg"`
	Users []User `json:"user_list"`
}

type User struct {
	Id            int    `json:"id"`
	Name          string `json:"name"`
	FollowCount   int    `json:"follow_count"`
	FollowerCount int    `json:"follower_count"`
	IsFollow      bool   `json:"is_follow"`
}

type Video struct {
	Id            int    `json:"id"`
	Title         string `json:"title"`
	Author        User   `json:"author"`
	PlayUrl       string `json:"play_url"`
	CoverUrl      string `json:"cover_url"`
	FavoriteCount int    `json:"favorite_count"`
	CommentCount  int    `json:"comment_count"`
	IsFavorite    bool   `json:"is_favorite"`
}

type Comment struct {
	Id         int    `json:"id"`
	Content    string `json:"content"`
	User       User   `json:"user"`
	CreateTime int    `json:"create_time"`
}

type Message struct {
	Id         int    `json:"id"`
	Content    string `json:"content"`
	CreateTime string `json:"create_time"`
}

type GetVideoListRequest struct {
	LatestTime int64  `form:"latest_time,optional"`
	Token      string `form:"token,optional"`
}

type GetVideoListReply struct {
	Code      int     `json:"status_code"`
	Msg       string  `json:"status_msg"`
	NextTime  int64   `json:"next_time"`
	VideoList []Video `json:"video_list"`
}

type PublishVideoRequest struct {
	Title string `form:"title"`
	Token string `form:"token"`
}

type PublishVideoReply struct {
	Code int    `json:"status_code"`
	Msg  string `json:"status_msg"`
}

type PublishedListRequest struct {
	Token  string `form:"token"`
	UserId int    `form:"user_id"`
}

type PublishedListReply struct {
	Code      int     `json:"status_code"`
	Msg       string  `json:"status_msg"`
	VideoList []Video `json:"video_list"`
}

type FavoriteVideoRequest struct {
	VideoId    int    `form:"video_id"`
	Token      string `form:"token"`
	ActionType int    `form:"action_type"`
}

type FavoriteVideoReply struct {
	Code int    `json:"status_code"`
	Msg  string `json:"status_msg"`
}

type FavoriteListRequest struct {
	Token  string `form:"token"`
	UserId int    `form:"user_id"`
}

type FavoriteListReply struct {
	Code      int     `json:"status_code"`
	Msg       string  `json:"status_msg"`
	VideoList []Video `json:"video_list"`
}

type CommentVideoRequest struct {
	VideoId    int    `form:"video_id"`
	Token      string `form:"token"`
	ActionType int    `form:"action_type"`
	Content    string `form:"comment_text"`
	CommentId  int    `form:"comment_id"`
}

type CommentVideoReply struct {
	Code    int     `json:"status_code"`
	Msg     string  `json:"status_msg"`
	Comment Comment `json:"comment"`
}

type CommentListRequest struct {
	Token   string `form:"token"`
	VideoId int    `form:"video_id"`
}

type CommentListReply struct {
	Code        int       `json:"status_code"`
	Msg         string    `json:"status_msg"`
	CommentList []Comment `json:"comment_list"`
}

type GetFriendListRequest struct {
	UserId int    `json:"user_id"`
	Token  string `json:"token"`
}

type GetFriendListReply struct {
	Code     int    `json:"status_code"`
	Msg      string `json:"status_msg"`
	UserList []User `json:"user_list"`
}

type SendMessageRequest struct {
	Token      string `json:"token"`
	ToUserId   int    `json:"to_user_id"`
	Content    string `json:"content"`
	ActionType int    `json:"action_type"`
}

type SendMessageReply struct {
	Code int    `json:"status_code"`
	Msg  string `json:"status_msg"`
}

type GetHistoryMessageRequest struct {
	Token    string `json:"token"`
	ToUserId int    `json:"to_user_id"`
}

type GetHistoryMessageReply struct {
	Code        int       `json:"status_code"`
	Msg         string    `json:"status_msg"`
	MessageList []Message `json:"message_list"`
}
