// Code generated by goctl. DO NOT EDIT!
// Source: contact.proto

package contactclient

import (
	"context"

	"h68u-tiktok-app-microservice/service/rpc/contact/types/contact"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateMessageRequest   = contact.CreateMessageRequest
	Empty                  = contact.Empty
	GetFriendsIdRequest    = contact.GetFriendsIdRequest
	GetFriendsIdResponse   = contact.GetFriendsIdResponse
	GetMessageListRequest  = contact.GetMessageListRequest
	GetMessageListResponse = contact.GetMessageListResponse
	Message                = contact.Message
	UserInfo               = contact.UserInfo

	Contact interface {
		GetFriendsId(ctx context.Context, in *GetFriendsIdRequest, opts ...grpc.CallOption) (*GetFriendsIdResponse, error)
		CreateMessage(ctx context.Context, in *CreateMessageRequest, opts ...grpc.CallOption) (*Empty, error)
		GetMessageList(ctx context.Context, in *GetMessageListRequest, opts ...grpc.CallOption) (*GetMessageListResponse, error)
	}

	defaultContact struct {
		cli zrpc.Client
	}
)

func NewContact(cli zrpc.Client) Contact {
	return &defaultContact{
		cli: cli,
	}
}

func (m *defaultContact) GetFriendsId(ctx context.Context, in *GetFriendsIdRequest, opts ...grpc.CallOption) (*GetFriendsIdResponse, error) {
	client := contact.NewContactClient(m.cli.Conn())
	return client.GetFriendsId(ctx, in, opts...)
}

func (m *defaultContact) CreateMessage(ctx context.Context, in *CreateMessageRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := contact.NewContactClient(m.cli.Conn())
	return client.CreateMessage(ctx, in, opts...)
}

func (m *defaultContact) GetMessageList(ctx context.Context, in *GetMessageListRequest, opts ...grpc.CallOption) (*GetMessageListResponse, error) {
	client := contact.NewContactClient(m.cli.Conn())
	return client.GetMessageList(ctx, in, opts...)
}
