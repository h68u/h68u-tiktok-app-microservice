// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: service/rpc/video/video.proto

package video

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 空消息
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{0}
}

// 视频信息结构体
type VideoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	AuthorId      int32  `protobuf:"varint,2,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	Title         string `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	PlayUrl       string `protobuf:"bytes,4,opt,name=PlayUrl,proto3" json:"PlayUrl,omitempty"`
	CoverUrl      string `protobuf:"bytes,5,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	FavoriteCount int32  `protobuf:"varint,6,opt,name=FavoriteCount,proto3" json:"FavoriteCount,omitempty"`
	CommentCount  int32  `protobuf:"varint,7,opt,name=CommentCount,proto3" json:"CommentCount,omitempty"`
}

func (x *VideoInfo) Reset() {
	*x = VideoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoInfo) ProtoMessage() {}

func (x *VideoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoInfo.ProtoReflect.Descriptor instead.
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{1}
}

func (x *VideoInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VideoInfo) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *VideoInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoInfo) GetPlayUrl() string {
	if x != nil {
		return x.PlayUrl
	}
	return ""
}

func (x *VideoInfo) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *VideoInfo) GetFavoriteCount() int32 {
	if x != nil {
		return x.FavoriteCount
	}
	return 0
}

func (x *VideoInfo) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

// 评论信息结构体
type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	AuthorId   int32  `protobuf:"varint,3,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	CreateTime int32  `protobuf:"varint,4,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	Content    string `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{2}
}

func (x *Comment) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comment) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Comment) GetCreateTime() int32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GetVideoListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int32 `protobuf:"varint,1,opt,name=Num,proto3" json:"Num,omitempty"`
}

func (x *GetVideoListRequest) Reset() {
	*x = GetVideoListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoListRequest) ProtoMessage() {}

func (x *GetVideoListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoListRequest.ProtoReflect.Descriptor instead.
func (*GetVideoListRequest) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{3}
}

func (x *GetVideoListRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type GetVideoListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoList []*VideoInfo `protobuf:"bytes,1,rep,name=VideoList,proto3" json:"VideoList,omitempty"`
}

func (x *GetVideoListResponse) Reset() {
	*x = GetVideoListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoListResponse) ProtoMessage() {}

func (x *GetVideoListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoListResponse.ProtoReflect.Descriptor instead.
func (*GetVideoListResponse) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{4}
}

func (x *GetVideoListResponse) GetVideoList() []*VideoInfo {
	if x != nil {
		return x.VideoList
	}
	return nil
}

type PublishVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Video *VideoInfo `protobuf:"bytes,1,opt,name=Video,proto3" json:"Video,omitempty"`
}

func (x *PublishVideoRequest) Reset() {
	*x = PublishVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishVideoRequest) ProtoMessage() {}

func (x *PublishVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishVideoRequest.ProtoReflect.Descriptor instead.
func (*PublishVideoRequest) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{5}
}

func (x *PublishVideoRequest) GetVideo() *VideoInfo {
	if x != nil {
		return x.Video
	}
	return nil
}

type GetVideoListByAuthorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId int32 `protobuf:"varint,1,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
}

func (x *GetVideoListByAuthorRequest) Reset() {
	*x = GetVideoListByAuthorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoListByAuthorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoListByAuthorRequest) ProtoMessage() {}

func (x *GetVideoListByAuthorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoListByAuthorRequest.ProtoReflect.Descriptor instead.
func (*GetVideoListByAuthorRequest) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{6}
}

func (x *GetVideoListByAuthorRequest) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type GetVideoListByAuthorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoList []*VideoInfo `protobuf:"bytes,1,rep,name=VideoList,proto3" json:"VideoList,omitempty"`
}

func (x *GetVideoListByAuthorResponse) Reset() {
	*x = GetVideoListByAuthorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoListByAuthorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoListByAuthorResponse) ProtoMessage() {}

func (x *GetVideoListByAuthorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoListByAuthorResponse.ProtoReflect.Descriptor instead.
func (*GetVideoListByAuthorResponse) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{7}
}

func (x *GetVideoListByAuthorResponse) GetVideoList() []*VideoInfo {
	if x != nil {
		return x.VideoList
	}
	return nil
}

type FavoriteVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	VideoId int32 `protobuf:"varint,2,opt,name=VideoId,proto3" json:"VideoId,omitempty"`
}

func (x *FavoriteVideoRequest) Reset() {
	*x = FavoriteVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteVideoRequest) ProtoMessage() {}

func (x *FavoriteVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteVideoRequest.ProtoReflect.Descriptor instead.
func (*FavoriteVideoRequest) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{8}
}

func (x *FavoriteVideoRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FavoriteVideoRequest) GetVideoId() int32 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type UnFavoriteVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	VideoId int32 `protobuf:"varint,2,opt,name=VideoId,proto3" json:"VideoId,omitempty"`
}

func (x *UnFavoriteVideoRequest) Reset() {
	*x = UnFavoriteVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnFavoriteVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnFavoriteVideoRequest) ProtoMessage() {}

func (x *UnFavoriteVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnFavoriteVideoRequest.ProtoReflect.Descriptor instead.
func (*UnFavoriteVideoRequest) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{9}
}

func (x *UnFavoriteVideoRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UnFavoriteVideoRequest) GetVideoId() int32 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type GetFavoriteVideoListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *GetFavoriteVideoListRequest) Reset() {
	*x = GetFavoriteVideoListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFavoriteVideoListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavoriteVideoListRequest) ProtoMessage() {}

func (x *GetFavoriteVideoListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavoriteVideoListRequest.ProtoReflect.Descriptor instead.
func (*GetFavoriteVideoListRequest) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{10}
}

func (x *GetFavoriteVideoListRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetFavoriteVideoListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoList []*VideoInfo `protobuf:"bytes,1,rep,name=VideoList,proto3" json:"VideoList,omitempty"`
}

func (x *GetFavoriteVideoListResponse) Reset() {
	*x = GetFavoriteVideoListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFavoriteVideoListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavoriteVideoListResponse) ProtoMessage() {}

func (x *GetFavoriteVideoListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavoriteVideoListResponse.ProtoReflect.Descriptor instead.
func (*GetFavoriteVideoListResponse) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{11}
}

func (x *GetFavoriteVideoListResponse) GetVideoList() []*VideoInfo {
	if x != nil {
		return x.VideoList
	}
	return nil
}

type IsFavoriteVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	VideoId int32 `protobuf:"varint,2,opt,name=VideoId,proto3" json:"VideoId,omitempty"`
}

func (x *IsFavoriteVideoRequest) Reset() {
	*x = IsFavoriteVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFavoriteVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFavoriteVideoRequest) ProtoMessage() {}

func (x *IsFavoriteVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFavoriteVideoRequest.ProtoReflect.Descriptor instead.
func (*IsFavoriteVideoRequest) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{12}
}

func (x *IsFavoriteVideoRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *IsFavoriteVideoRequest) GetVideoId() int32 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type IsFavoriteVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFavorite bool `protobuf:"varint,1,opt,name=IsFavorite,proto3" json:"IsFavorite,omitempty"`
}

func (x *IsFavoriteVideoResponse) Reset() {
	*x = IsFavoriteVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFavoriteVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFavoriteVideoResponse) ProtoMessage() {}

func (x *IsFavoriteVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFavoriteVideoResponse.ProtoReflect.Descriptor instead.
func (*IsFavoriteVideoResponse) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{13}
}

func (x *IsFavoriteVideoResponse) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

type CommentVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int32  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	VideoId int32  `protobuf:"varint,2,opt,name=VideoId,proto3" json:"VideoId,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *CommentVideoRequest) Reset() {
	*x = CommentVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentVideoRequest) ProtoMessage() {}

func (x *CommentVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentVideoRequest.ProtoReflect.Descriptor instead.
func (*CommentVideoRequest) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{14}
}

func (x *CommentVideoRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CommentVideoRequest) GetVideoId() int32 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *CommentVideoRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CommentVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId      int64  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Content     string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	CreatedTime int32  `protobuf:"varint,4,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"`
}

func (x *CommentVideoResponse) Reset() {
	*x = CommentVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentVideoResponse) ProtoMessage() {}

func (x *CommentVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentVideoResponse.ProtoReflect.Descriptor instead.
func (*CommentVideoResponse) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{15}
}

func (x *CommentVideoResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommentVideoResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CommentVideoResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentVideoResponse) GetCreatedTime() int32 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

type GetCommentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId int32 `protobuf:"varint,1,opt,name=VideoId,proto3" json:"VideoId,omitempty"`
}

func (x *GetCommentListRequest) Reset() {
	*x = GetCommentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentListRequest) ProtoMessage() {}

func (x *GetCommentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentListRequest.ProtoReflect.Descriptor instead.
func (*GetCommentListRequest) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{16}
}

func (x *GetCommentListRequest) GetVideoId() int32 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type GetCommentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentList []*Comment `protobuf:"bytes,1,rep,name=CommentList,proto3" json:"CommentList,omitempty"`
}

func (x *GetCommentListResponse) Reset() {
	*x = GetCommentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentListResponse) ProtoMessage() {}

func (x *GetCommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentListResponse.ProtoReflect.Descriptor instead.
func (*GetCommentListResponse) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{17}
}

func (x *GetCommentListResponse) GetCommentList() []*Comment {
	if x != nil {
		return x.CommentList
	}
	return nil
}

type DeleteVideoCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	CommentId int64 `protobuf:"varint,2,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
}

func (x *DeleteVideoCommentRequest) Reset() {
	*x = DeleteVideoCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_video_video_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVideoCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVideoCommentRequest) ProtoMessage() {}

func (x *DeleteVideoCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_video_video_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVideoCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteVideoCommentRequest) Descriptor() ([]byte, []int) {
	return file_service_rpc_video_video_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteVideoCommentRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteVideoCommentRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

var File_service_rpc_video_video_proto protoreflect.FileDescriptor

var file_service_rpc_video_video_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0xcd, 0x01, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x6f, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x27, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x22, 0x46, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x3d, 0x0a, 0x13, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x22, 0x39, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x14, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x16, 0x55, 0x6e, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x64, 0x22, 0x35, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x16, 0x49, 0x73, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x17, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x22,
	0x61, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x7a, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x31,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x64, 0x22, 0x4a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x51, 0x0a,
	0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x32, 0xf8, 0x05, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x12, 0x1a, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5f, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x22, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a,
	0x0a, 0x0d, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12,
	0x1b, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0f, 0x55, 0x6e,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1d, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x55, 0x6e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5f, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x22, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x49,
	0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1d,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1a, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x09, 0x5a, 0x07, 0x2e,
	0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_rpc_video_video_proto_rawDescOnce sync.Once
	file_service_rpc_video_video_proto_rawDescData = file_service_rpc_video_video_proto_rawDesc
)

func file_service_rpc_video_video_proto_rawDescGZIP() []byte {
	file_service_rpc_video_video_proto_rawDescOnce.Do(func() {
		file_service_rpc_video_video_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_rpc_video_video_proto_rawDescData)
	})
	return file_service_rpc_video_video_proto_rawDescData
}

var file_service_rpc_video_video_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_service_rpc_video_video_proto_goTypes = []interface{}{
	(*Empty)(nil),                        // 0: video.Empty
	(*VideoInfo)(nil),                    // 1: video.VideoInfo
	(*Comment)(nil),                      // 2: video.Comment
	(*GetVideoListRequest)(nil),          // 3: video.GetVideoListRequest
	(*GetVideoListResponse)(nil),         // 4: video.GetVideoListResponse
	(*PublishVideoRequest)(nil),          // 5: video.PublishVideoRequest
	(*GetVideoListByAuthorRequest)(nil),  // 6: video.GetVideoListByAuthorRequest
	(*GetVideoListByAuthorResponse)(nil), // 7: video.GetVideoListByAuthorResponse
	(*FavoriteVideoRequest)(nil),         // 8: video.FavoriteVideoRequest
	(*UnFavoriteVideoRequest)(nil),       // 9: video.UnFavoriteVideoRequest
	(*GetFavoriteVideoListRequest)(nil),  // 10: video.GetFavoriteVideoListRequest
	(*GetFavoriteVideoListResponse)(nil), // 11: video.GetFavoriteVideoListResponse
	(*IsFavoriteVideoRequest)(nil),       // 12: video.IsFavoriteVideoRequest
	(*IsFavoriteVideoResponse)(nil),      // 13: video.IsFavoriteVideoResponse
	(*CommentVideoRequest)(nil),          // 14: video.CommentVideoRequest
	(*CommentVideoResponse)(nil),         // 15: video.CommentVideoResponse
	(*GetCommentListRequest)(nil),        // 16: video.GetCommentListRequest
	(*GetCommentListResponse)(nil),       // 17: video.GetCommentListResponse
	(*DeleteVideoCommentRequest)(nil),    // 18: video.DeleteVideoCommentRequest
}
var file_service_rpc_video_video_proto_depIdxs = []int32{
	1,  // 0: video.GetVideoListResponse.VideoList:type_name -> video.VideoInfo
	1,  // 1: video.PublishVideoRequest.Video:type_name -> video.VideoInfo
	1,  // 2: video.GetVideoListByAuthorResponse.VideoList:type_name -> video.VideoInfo
	1,  // 3: video.GetFavoriteVideoListResponse.VideoList:type_name -> video.VideoInfo
	2,  // 4: video.GetCommentListResponse.CommentList:type_name -> video.Comment
	3,  // 5: video.Video.GetVideoList:input_type -> video.GetVideoListRequest
	5,  // 6: video.Video.PublishVideo:input_type -> video.PublishVideoRequest
	6,  // 7: video.Video.GetVideoListByAuthor:input_type -> video.GetVideoListByAuthorRequest
	8,  // 8: video.Video.FavoriteVideo:input_type -> video.FavoriteVideoRequest
	9,  // 9: video.Video.UnFavoriteVideo:input_type -> video.UnFavoriteVideoRequest
	10, // 10: video.Video.GetFavoriteVideoList:input_type -> video.GetFavoriteVideoListRequest
	12, // 11: video.Video.IsFavoriteVideo:input_type -> video.IsFavoriteVideoRequest
	14, // 12: video.Video.CommentVideo:input_type -> video.CommentVideoRequest
	16, // 13: video.Video.GetCommentList:input_type -> video.GetCommentListRequest
	18, // 14: video.Video.DeleteVideoComment:input_type -> video.DeleteVideoCommentRequest
	4,  // 15: video.Video.GetVideoList:output_type -> video.GetVideoListResponse
	0,  // 16: video.Video.PublishVideo:output_type -> video.Empty
	7,  // 17: video.Video.GetVideoListByAuthor:output_type -> video.GetVideoListByAuthorResponse
	0,  // 18: video.Video.FavoriteVideo:output_type -> video.Empty
	0,  // 19: video.Video.UnFavoriteVideo:output_type -> video.Empty
	11, // 20: video.Video.GetFavoriteVideoList:output_type -> video.GetFavoriteVideoListResponse
	13, // 21: video.Video.IsFavoriteVideo:output_type -> video.IsFavoriteVideoResponse
	15, // 22: video.Video.CommentVideo:output_type -> video.CommentVideoResponse
	17, // 23: video.Video.GetCommentList:output_type -> video.GetCommentListResponse
	0,  // 24: video.Video.DeleteVideoComment:output_type -> video.Empty
	15, // [15:25] is the sub-list for method output_type
	5,  // [5:15] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_service_rpc_video_video_proto_init() }
func file_service_rpc_video_video_proto_init() {
	if File_service_rpc_video_video_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_rpc_video_video_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoListByAuthorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoListByAuthorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnFavoriteVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFavoriteVideoListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFavoriteVideoListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFavoriteVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFavoriteVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rpc_video_video_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVideoCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_rpc_video_video_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_rpc_video_video_proto_goTypes,
		DependencyIndexes: file_service_rpc_video_video_proto_depIdxs,
		MessageInfos:      file_service_rpc_video_video_proto_msgTypes,
	}.Build()
	File_service_rpc_video_video_proto = out.File
	file_service_rpc_video_video_proto_rawDesc = nil
	file_service_rpc_video_video_proto_goTypes = nil
	file_service_rpc_video_video_proto_depIdxs = nil
}
