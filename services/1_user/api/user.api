syntax = "v1"

// 不需要鉴权的接口
service user {
	@handler Register // 用户注册
	post /douyin/user/register (RegisterRequest) returns (RegisterReply)
	
	@handler Login // 用户登录
	post /douyin/user/login (LoginRequest) returns (LoginReply)
}

// 用户注册
type (
	RegisterRequest {
		Username string `form:"username"`
		Password string `form:"password"`
	}
	RegisterReply {
		Code   int    `json:"status_code"`
		Msg    string `json:"status_msg"`
		UserId int    `json:"user_id"`
		Token  string `json:"token"`
	}
)

// 用户登录
type (
	LoginRequest {
		Username string `form:"username"`
		Password string `form:"password"`
	}
	LoginReply {
		Code   int    `json:"status_code"`
		Msg    string `json:"status_msg"`
		UserId int    `json:"user_id"`
		Token  string `json:"token"`
	}
)

// 需要鉴权的接口
@server(
	middleware: Auth
)
service user {
	@handler GetUserInfo // 获取用户信息
	get /douyin/user (GetUserInfoRequest) returns (GetUserInfoReply)
	
	@handler Follow // 关注用户
	post /douyin/relation/action (FollowRequest) returns (FollowReply)
	
	@handler FollowList // 获取关注列表
	get /douyin/relation/follow/list (FollowListRequest) returns (FollowListReply)
	
	@handler FansList // 获取粉丝列表
	get /douyin/relation/follower/list (FansListRequest) returns (FansListReply)
}

// 用户信息结构体
type User {
	Id            int    `json:"id"`
	Name          string `json:"name"`
	FollowCount   int    `json:"follow_count"`
	FollowerCount int    `json:"follower_count"`
	IsFollow      bool   `json:"is_follow"`
}

// 获取用户信息
type (
	GetUserInfoRequest {
		UserId int    `form:"user_id"`
		Token  string `form:"token"`
	}
	GetUserInfoReply {
		Code int    `json:"status_code"`
		Msg  string `json:"status_msg"`
		User User   `json:"user"`
	}
)

// 关注用户
type (
	FollowRequest {
		UserId     int    `form:"user_id"`
		Token      string `form:"token"`
		ToUserId   int    `form:"to_user_id"`
		ActionType int    `form:"action_type"`
	}
	FollowReply {
		Code int    `json:"status_code"`
		Msg  string `json:"status_msg"`
	}
)

// 获取关注列表
type (
	FollowListRequest {
		UserId int    `form:"user_id"`
		Token  string `form:"token"`
	}
	FollowListReply {
		Code  int    `json:"status_code"`
		Msg   string `json:"status_msg"`
		Users []User `json:"user_list"`
	}
)

// 获取粉丝列表
type (
	FansListRequest {
		UserId int    `form:"user_id"`
		Token  string `form:"token"`
	}
	FansListReply {
		Code  int    `json:"status_code"`
		Msg   string `json:"status_msg"`
		Users []User `json:"user_list"`
	}
)