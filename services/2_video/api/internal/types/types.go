// Code generated by goctl. DO NOT EDIT.
package types

type User struct {
	Id            int    `json:"id"`
	Name          string `json:"name"`
	FollowCount   int    `json:"follow_count"`
	FollowerCount int    `json:"follower_count"`
	IsFollow      bool   `json:"is_follow"`
}

type Video struct {
	Id            int    `json:"id"`
	Title         string `json:"title"`
	Author        User   `json:"author"`
	PlayUrl       string `json:"play_url"`
	CoverUrl      string `json:"cover_url"`
	FavoriteCount int    `json:"favorite_count"`
	CommentCount  int    `json:"comment_count"`
	IsFavorite    bool   `json:"is_favorite"`
}

type Comment struct {
	Id         int    `json:"id"`
	Content    string `json:"content"`
	User       User   `json:"user"`
	CreateTime int    `json:"create_time"`
}

type GetVideoListRequest struct {
	LatestTime int64  `form:"latest_time,optional"`
	Token      string `form:"token,optional"`
}

type GetVideoListReply struct {
	Code      int     `json:"status_code"`
	Msg       string  `json:"status_msg"`
	NextTime  int64   `json:"next_time"`
	VideoList []Video `json:"video_list"`
}

type PublishVideoRequest struct {
	Title string `form:"title"`
	Token string `form:"token"`
}

type PublishVideoReply struct {
	Code int    `json:"status_code"`
	Msg  string `json:"status_msg"`
}

type PublishedListRequest struct {
	Token  string `form:"token"`
	UserId int    `form:"user_id"`
}

type PublishedListReply struct {
	Code      int     `json:"status_code"`
	Msg       string  `json:"status_msg"`
	VideoList []Video `json:"video_list"`
}

type FavoriteVideoRequest struct {
	VideoId    int    `form:"video_id"`
	Token      string `form:"token"`
	ActionType int    `form:"action_type"`
}

type FavoriteVideoReply struct {
	Code int    `json:"status_code"`
	Msg  string `json:"status_msg"`
}

type FavoriteListRequest struct {
	Token  string `form:"token"`
	UserId int    `form:"user_id"`
}

type FavoriteListReply struct {
	Code      int     `json:"status_code"`
	Msg       string  `json:"status_msg"`
	VideoList []Video `json:"video_list"`
}

type CommentVideoRequest struct {
	VideoId    int    `form:"video_id"`
	Token      string `form:"token"`
	ActionType int    `form:"action_type"`
	Content    string `form:"comment_text"`
	CommentId  int    `form:"comment_id"`
}

type CommentVideoReply struct {
	Code    int     `json:"status_code"`
	Msg     string  `json:"status_msg"`
	Comment Comment `json:"comment"`
}

type CommentListRequest struct {
	Token   string `form:"token"`
	VideoId int    `form:"video_id"`
}

type CommentListReply struct {
	Code        int       `json:"status_code"`
	Msg         string    `json:"status_msg"`
	CommentList []Comment `json:"comment_list"`
}
